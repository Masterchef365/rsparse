use rsparse;
mod utils;


#[test]
fn lsolve_1(){
    let l = vec![
        vec![1.0000,  0.,      0.,       0.,       0.,       0.,       0.,       0.,       0.,       0.],
        vec![0.4044,  1.0000,  0.,       0.,       0.,       0.,       0.,       0.,       0.,       0.],
        vec![0.3465,  0.0122,  1.0000,   0.,       0.,       0.,       0.,       0.,       0.,       0.],
        vec![0.7592, -0.3591, -0.1154,   1.0000,   0.,       0.,       0.,       0.,       0.,       0.],
        vec![0.6868,  0.1135,  0.2113,   0.6470,   1.0000,   0.,       0.,       0.,       0.,       0.],
        vec![0.7304, -0.1453,  0.1755,   0.0585,  -0.7586,   1.0000,   0.,       0.,       0.,       0.],
        vec![0.8362,  0.0732,  0.7601,  -0.1107,   0.1175,  -0.5406,   1.0000,   0.,       0.,       0.],
        vec![0.0390,  0.8993,  0.3428,   0.1639,   0.4246,  -0.5861,   0.7790,   1.0000,   0.,       0.],
        vec![0.8079, -0.4437,  0.8271,   0.2583,  -0.2238,   0.0544,   0.2360,  -0.7387,   1.0000,   0.],
        vec![0.1360,  0.9532, -0.1212,  -0.1943,   0.4311,   0.1069,   0.3717,   0.7176,  -0.6053,   1.0000]
    ];
    let mut l_sparse = rsparse::data::Sprs::new();
    l_sparse.from_vec(&l);

    let mut b = vec![
        0.8568,
        0.3219,
        0.9263,
        0.4635,
        0.8348,
        0.1339,
        0.8444,
        0.7000,
        0.7947,
        0.5552
    ];

    let x = vec![
         0.856803,
        -0.024615,
         0.629721,
        -0.123138,
         0.195778,
        -0.450195,
        -0.628933,
         0.636038,
         0.289215,
         0.430638
    ];

    rsparse::lsolve(&l_sparse, &mut b);

    utils::assert_eq_f_vec(&b, &x, 1e-3);
}

#[test]
fn ltsolve_1(){
    let l = vec![
        vec![1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        vec![0.3376, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        vec![0.8260, 0.2762, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        vec![0.5710, 0.1764, 0.5430, 1.0000, 0.0000, 0.0000, 0.0000],
        vec![0.9194, 0.3583, 0.6850, 0.6594, 1.0000, 0.0000, 0.0000],
        vec![0.2448, 0.5015, -0.2830, 0.2239, 0.4723, 1.0000, 0.0000],
        vec![0.2423, 0.2332, -0.8355, 0.7522, -0.3700, 0.1985, 1.0000]
    ];
    let mut l_sparse = rsparse::data::Sprs::new();
    l_sparse.from_vec(&l);

    let mut b = vec![
        0.444841,
        0.528773,
        0.988345,
        0.097749,
        0.996166,
        0.068040,
        0.844511
    ];

    let x = vec![ // l'\b
        -1.326867,
        -0.270323,
         1.502297,
        -1.409055,
         1.355645,
        -0.099585,
         0.844511
    ];

    rsparse::ltsolve(&l_sparse, &mut b);

    utils::assert_eq_f_vec(&b, &x, 1e-3);
}

#[test]
fn usolve_1(){
    let u =vec![    
        vec![0.7824, 0.4055, 0.0827, 0.9534, 0.9713, 0.1418, 0.0781],
        vec![0.0, 0.7766, 0.2981, 0.2307, -0.3172, 0.6819, 0.5979],
        vec![0.0, 0.0, 0.2986, -0.5576, 0.5928, -0.2759, -0.1672],
        vec![0.0, 0.0, 0.0, 0.6393, -0.4245, 0.1277, 0.5842],
        vec![0.0, 0.0, 0.0, 0.0, -1.277, 1.1435, 1.0631],
        vec![0.0, 0.0, 0.0, 0.0, 0.0, 1.2096, 0.7268],
        vec![0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.4574]
    ];
    let mut u_sparse = rsparse::data::Sprs::new();
    u_sparse.from_vec(&u);

    let mut b = vec![
        0.189772,
        0.055761,
        0.030676,
        0.181620,
        0.526924,
        0.744179,
        0.078005
    ];

    let x = vec![ // u\b
        -0.047146,
        -0.941265,
         1.158658,
         0.355142,
         0.088052,
         0.717684,
        -0.170555
    ];

    rsparse::usolve(&u_sparse, &mut b);

    utils::assert_eq_f_vec(&b, &x, 1e-3);
}

#[test]
fn utsolve_1(){
    let u =vec![    
        vec![0.9842, 0.1720, 0.9948, 0.2766, 0.4560, 0.1462, 0.8124],
        vec![0.0000, 0.6894, 0.1043, 0.4486, 0.5217, 0.7157, 0.4132],
        vec![0.0000, 0.0000, -0.5500, -0.2340, 0.0822, 0.2176, -0.1996],
        vec![0.0000, 0.0000, 0.0000, 0.6554, -0.1564, -0.0287, 0.2107],
        vec![0.0000, 0.0000, 0.0000, 0.0000, -0.4127, -0.4652, -0.6993],
        vec![0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.6881, 0.3037],
        vec![0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, -0.7740]
    ];
    let mut u_sparse = rsparse::data::Sprs::new();
    u_sparse.from_vec(&u);

    let mut b = vec![
        0.444841,
        0.528773,
        0.988345,
        0.097749,
        0.996166,
        0.068040,
        0.844511
    ];

    let x = vec![ // u'\b
         0.4520,
         0.6542,
        -0.8554,
        -0.7947,
        -0.9565,
        -1.0870,
         0.1745
    ];

    rsparse::utsolve(&u_sparse, &mut b);

    utils::assert_eq_f_vec(&b, &x, 1e-3);
}

#[test]
fn lusol_1(){
    let l = vec![
        vec![1.0000,  0.,      0.,       0.,       0.,       0.,       0.,       0.,       0.,       0.],
        vec![0.4044,  1.0000,  0.,       0.,       0.,       0.,       0.,       0.,       0.,       0.],
        vec![0.3465,  0.0122,  1.0000,   0.,       0.,       0.,       0.,       0.,       0.,       0.],
        vec![0.7592, -0.3591, -0.1154,   1.0000,   0.,       0.,       0.,       0.,       0.,       0.],
        vec![0.6868,  0.1135,  0.2113,   0.6470,   1.0000,   0.,       0.,       0.,       0.,       0.],
        vec![0.7304, -0.1453,  0.1755,   0.0585,  -0.7586,   1.0000,   0.,       0.,       0.,       0.],
        vec![0.8362,  0.0732,  0.7601,  -0.1107,   0.1175,  -0.5406,   1.0000,   0.,       0.,       0.],
        vec![0.0390,  0.8993,  0.3428,   0.1639,   0.4246,  -0.5861,   0.7790,   1.0000,   0.,       0.],
        vec![0.8079, -0.4437,  0.8271,   0.2583,  -0.2238,   0.0544,   0.2360,  -0.7387,   1.0000,   0.],
        vec![0.1360,  0.9532, -0.1212,  -0.1943,   0.4311,   0.1069,   0.3717,   0.7176,  -0.6053,   1.0000]
    ];
    let mut l_sparse = rsparse::data::Sprs::new();
    l_sparse.from_vec(&l);

    let mut b = vec![
        0.8568,
        0.3219,
        0.9263,
        0.4635,
        0.8348,
        0.1339,
        0.8444,
        0.7000,
        0.7947,
        0.5552
    ];

    let x = vec![
         0.856803,
        -0.024615,
         0.629721,
        -0.123138,
         0.195778,
        -0.450195,
        -0.628933,
         0.636038,
         0.289215,
         0.430638
    ];

    rsparse::lusol(&mut l_sparse, &mut b, 1, 1e-6);

    utils::assert_eq_f_vec(&b, &x, 1e-3);
}

#[test]
fn lusol_2(){
    let l = vec![
        vec![8.2541e-01, 9.5622e-01, 4.6698e-01, 8.4410e-03, 6.3193e-01, 7.5741e-01, 5.3584e-01, 3.9448e-01],
        vec![7.4808e-01, 2.0403e-01, 9.4649e-01, 2.5086e-01, 2.6931e-01, 5.5866e-01, 3.1827e-01, 2.9819e-02],
        vec![6.3980e-01, 9.1615e-01, 8.5515e-01, 9.5323e-01, 7.8323e-01, 8.6003e-01, 7.5761e-01, 8.9255e-01],
        vec![1.8726e-01, 8.9339e-01, 9.9796e-01, 5.0506e-01, 6.1439e-01, 4.3617e-01, 7.3369e-01, 1.5565e-01],
        vec![2.8015e-02, 6.3404e-01, 8.4771e-01, 8.6419e-01, 2.7555e-01, 3.5909e-01, 7.6644e-01, 8.9905e-02],
        vec![9.1817e-01, 8.6629e-01, 5.9917e-01, 1.9346e-01, 2.1960e-01, 1.8676e-01, 8.7020e-01, 2.7891e-01],
        vec![3.1999e-01, 5.9988e-01, 8.7402e-01, 5.5710e-01, 2.4707e-01, 7.5652e-01, 8.3682e-01, 6.3145e-01],
        vec![9.3807e-01, 7.5985e-02, 7.8758e-01, 3.6881e-01, 4.4553e-01, 5.5005e-02, 3.3908e-01, 3.4573e-01],
    ];
    let mut l_sparse = rsparse::data::Sprs::new();
    l_sparse.from_vec(&l);

    let mut b = vec![
        0.4377,
        0.7328,
        0.1227,
        0.1817,
        0.2634,
        0.6876,
        0.8711,
        0.4201
    ];

    let x = vec![
         0.264678,
        -1.228118,
        -0.035452,
        -0.676711,
        -0.066194,
         0.761495,
         1.852384,
        -0.282992
    ];

    rsparse::lusol(&mut l_sparse, &mut b, 1, 1e-6);

    utils::assert_eq_f_vec(&b, &x, 1e-3);
}

#[test]
fn lusol_3(){
    let l = vec![vec![0.21, 0.87, 0.12, 0.73, 0.83, 0.35, 0.01, 0.02, 0.99, 0.93, 0.12, 0.22, 0.7, 0.55, 0.12, 0.66, 0.36, 0.8, 0.53, 0.98, 0.06, 0.34, 0.24, 0.49, 0.7, 0.5, 0.46, 0.73, 0.48, 0.33, 0.68, 0.84, 0.97, 0.38, 0.88, 0.29, 0.69, 0.47, 0.15, 0.05],vec![0.4, 0.21, 0.03, 0.68, 0.95, 0.88, 0.37, 0.46, 0.67, 0.06, 0.64, 0.03, 0.99, 0.75, 0.16, 0.25, 0.28, 0.39, 0.62, 0.21, 0.08, 0.71, 0.39, 0.2, 0.09, 0.72, 0.26, 0.01, 0.9, 0.61, 0.16, 0.14, 0.88, 0.31, 0.03, 0.78, 0.36, 0.77, 0.63, 0.4],vec![0.91, 0.88, 0.89, 0.73, 0.94, 0.76, 0.42, 0.98, 0.79, 0.82, 0.59, 0.15, 0.59, 0.28, 0.46, 0.73, 0.25, 0.94, 0.2, 0.89, 0.99, 0.62, 0.62, 0.52, 0.06, 0.98, 0.01, 0.04, 0.52, 0.29, 0.08, 0.83, 0.29, 0.54, 0.05, 0.87, 0.27, 0.37, 0.67, 0.26],vec![0.58, 0.27, 0.36, 0.41, 0.31, 0.45, 0.47, 0.13, 0.95, 0.83, 0.69, 0.46, 0.33, 0.57, 0.57, 0.44, 0.93, 0.51, 0.11, 0.22, 0.86, 0.02, 0.99, 0.16, 0.19, 0.22, 0.81, 0.05, 0.67, 0.1, 0.01, 0.09, 0.33, 0.28, 0.49, 0.25, 0.76, 0.83, 0.96, 0.42],vec![0.07, 0.9, 0.47, 0.17, 0.76, 0.43, 0.15, 0.23, 0.37, 0.4, 0.11, 0.58, 0.42, 0.22, 0.62, 0.01, 0.64, 0.46, 0.15, 0.98, 0.11, 0.1, 0.46, 0.85, 0.96, 0.62, 0.1, 0.66, 0.77, 0.96, 0.29, 0.75, 0.48, 0.03, 0.39, 0.94, 0.83, 0.4, 0.0, 0.88],vec![0.6, 0.91, 0.15, 0.29, 0.99, 0.74, 0.54, 0.37, 0.27, 0.86, 0.68, 0.11, 0.76, 0.14, 0.79, 0.83, 0.36, 0.42, 0.74, 0.3, 0.9, 0.71, 0.67, 0.01, 0.15, 0.78, 0.24, 0.1, 0.96, 0.79, 0.82, 0.4, 0.07, 0.65, 0.92, 0.48, 0.08, 0.77, 0.71, 0.54],vec![0.96, 0.89, 0.53, 0.9, 0.22, 0.3, 0.2, 0.81, 0.76, 0.61, 0.85, 0.24, 0.48, 0.18, 0.96, 0.69, 0.12, 0.93, 0.92, 0.9, 0.79, 0.21, 0.23, 0.54, 0.13, 0.53, 0.92, 0.64, 0.72, 0.86, 0.11, 0.16, 0.65, 0.16, 0.57, 0.78, 0.83, 0.78, 0.68, 0.34],vec![0.45, 0.27, 0.15, 0.75, 0.75, 0.5, 0.36, 0.82, 0.07, 0.94, 0.1, 0.66, 0.89, 0.61, 0.53, 0.36, 0.53, 0.31, 0.44, 0.24, 0.21, 0.39, 0.48, 0.14, 0.57, 0.56, 0.93, 0.38, 0.87, 0.38, 0.53, 0.07, 0.78, 0.43, 0.68, 0.97, 0.68, 0.65, 0.33, 0.97],vec![0.07, 0.54, 0.43, 0.74, 0.03, 0.42, 0.59, 0.18, 0.13, 0.8, 0.51, 0.32, 0.19, 0.06, 0.26, 0.75, 0.57, 0.93, 0.1, 0.4, 0.04, 0.54, 0.53, 0.91, 0.31, 0.99, 0.99, 0.91, 0.51, 0.41, 0.75, 0.5, 0.52, 0.85, 0.36, 0.77, 0.68, 0.31, 0.08, 0.11],vec![0.2, 0.28, 0.13, 0.58, 0.63, 0.51, 0.44, 0.4, 0.52, 0.32, 0.85, 0.97, 0.7, 0.94, 0.08, 0.81, 0.48, 0.52, 0.61, 0.89, 0.44, 0.29, 0.59, 0.71, 0.17, 0.98, 0.44, 0.92, 0.82, 0.68, 0.44, 0.17, 0.12, 0.92, 0.9, 0.01, 0.09, 0.56, 0.08, 0.58],vec![0.87, 0.96, 0.03, 0.23, 0.29, 0.1, 0.78, 0.99, 0.79, 0.12, 0.37, 0.63, 0.35, 0.69, 0.14, 0.68, 0.73, 0.35, 0.75, 0.29, 0.57, 0.46, 0.28, 0.22, 0.87, 0.21, 0.85, 0.02, 0.73, 0.38, 0.45, 0.26, 0.12, 0.48, 0.27, 0.78, 0.14, 0.2, 0.64, 0.82],vec![0.37, 0.38, 0.27, 0.11, 0.42, 0.17, 0.24, 0.08, 0.96, 0.9, 0.77, 0.38, 0.42, 0.9, 0.15, 0.43, 0.98, 0.37, 0.49, 0.53, 0.93, 0.34, 0.6, 0.46, 0.06, 0.12, 0.37, 0.78, 0.16, 0.79, 0.11, 0.64, 0.47, 0.9, 0.27, 0.88, 0.82, 0.08, 0.52, 0.49],vec![0.1, 0.74, 0.37, 0.97, 0.4, 0.52, 0.14, 0.44, 0.56, 0.82, 0.01, 0.45, 0.22, 0.26, 0.08, 0.2, 0.32, 0.29, 0.99, 0.42, 0.83, 0.64, 0.17, 0.36, 0.23, 0.85, 0.17, 0.69, 0.25, 0.12, 0.68, 0.15, 0.63, 0.31, 0.81, 0.29, 0.61, 0.07, 0.39, 0.75],vec![0.84, 0.44, 0.86, 0.37, 0.14, 0.23, 0.83, 0.19, 0.64, 0.58, 0.42, 0.49, 0.73, 1.0, 0.78, 0.27, 0.59, 0.82, 0.57, 0.85, 0.77, 0.82, 0.41, 0.22, 0.56, 0.48, 0.07, 0.19, 0.74, 0.69, 0.64, 0.66, 0.47, 0.81, 0.37, 0.56, 0.89, 0.12, 0.75, 1.0],vec![0.9, 0.47, 0.91, 0.4, 0.47, 0.26, 0.36, 0.51, 0.14, 0.05, 0.8, 0.58, 0.89, 0.57, 0.25, 0.09, 0.74, 0.22, 0.08, 0.69, 0.86, 0.21, 0.96, 0.4, 0.21, 0.9, 0.54, 0.08, 0.9, 0.5, 0.13, 0.66, 0.32, 0.5, 0.58, 0.6, 0.11, 0.18, 0.15, 0.84],vec![0.45, 0.4, 0.55, 0.52, 0.84, 0.12, 0.67, 0.19, 0.3, 0.76, 0.31, 0.84, 0.12, 0.75, 0.04, 0.77, 0.79, 0.1, 0.56, 0.18, 0.15, 0.1, 0.36, 0.6, 0.28, 0.96, 0.51, 0.29, 0.25, 0.63, 0.02, 0.63, 0.14, 0.2, 0.11, 0.53, 0.27, 0.48, 0.73, 0.33],vec![0.08, 0.55, 0.67, 0.68, 0.87, 0.78, 0.69, 0.4, 0.62, 0.81, 0.55, 0.61, 0.04, 0.33, 0.36, 0.42, 0.11, 0.28, 0.33, 0.26, 0.46, 0.4, 0.44, 0.06, 0.06, 0.95, 0.73, 0.14, 0.36, 0.77, 0.18, 0.7, 0.12, 0.52, 0.5, 0.63, 0.26, 0.86, 0.93, 0.59],vec![0.44, 0.46, 0.64, 0.13, 0.93, 0.12, 0.61, 0.8, 0.17, 0.82, 0.69, 0.76, 0.02, 0.24, 0.38, 0.29, 0.26, 0.86, 0.55, 0.69, 0.07, 0.98, 0.51, 0.88, 0.68, 0.42, 0.39, 0.51, 0.76, 0.83, 0.46, 0.81, 0.1, 0.07, 0.18, 0.74, 0.82, 0.45, 0.72, 0.23],vec![0.99, 0.46, 0.81, 0.88, 0.4, 0.06, 0.87, 0.59, 0.4, 0.56, 0.74, 0.4, 0.46, 0.61, 0.74, 0.09, 0.9, 0.9, 1.0, 0.73, 0.69, 0.47, 0.36, 0.1, 0.86, 0.82, 0.48, 0.06, 0.03, 0.9, 0.01, 0.08, 0.11, 0.15, 0.02, 0.21, 0.29, 0.42, 0.13, 0.27],vec![0.95, 0.7, 0.54, 0.29, 0.99, 0.79, 0.58, 0.6, 0.98, 0.66, 0.35, 0.36, 0.87, 0.35, 0.17, 0.41, 0.94, 0.78, 0.14, 0.5, 0.04, 0.06, 0.96, 0.52, 0.38, 0.54, 0.82, 0.81, 0.83, 0.84, 0.18, 0.76, 0.27, 0.88, 0.06, 0.95, 0.09, 0.77, 0.28, 0.52],vec![0.05, 0.63, 0.02, 0.28, 0.64, 0.85, 0.41, 0.86, 0.53, 0.19, 0.33, 0.34, 0.29, 0.14, 0.24, 0.78, 0.62, 0.16, 0.52, 0.15, 0.04, 0.26, 0.83, 0.3, 0.21, 0.06, 0.0, 0.9, 0.06, 0.73, 0.62, 0.36, 0.78, 0.48, 0.08, 0.09, 0.14, 0.06, 0.61, 0.61],vec![0.78, 0.94, 0.55, 0.23, 0.19, 0.05, 0.43, 0.84, 0.51, 0.57, 0.14, 0.19, 0.32, 0.61, 0.14, 0.36, 0.14, 0.04, 0.15, 0.27, 0.37, 0.97, 0.53, 0.84, 0.41, 0.34, 0.1, 0.8, 0.54, 0.64, 0.66, 0.96, 0.5, 0.92, 0.56, 0.33, 0.02, 0.15, 0.66, 0.02],vec![0.63, 0.45, 0.88, 0.32, 0.2, 0.51, 0.85, 0.81, 0.81, 0.23, 0.86, 0.14, 0.22, 0.69, 0.93, 0.95, 0.58, 0.54, 0.31, 0.21, 0.66, 0.51, 0.13, 0.44, 0.04, 0.44, 0.98, 0.27, 0.17, 0.36, 0.44, 0.37, 0.35, 0.94, 0.54, 0.93, 0.5, 0.48, 0.99, 0.11],vec![0.76, 0.74, 0.67, 0.34, 0.75, 0.82, 0.95, 0.24, 0.16, 0.34, 0.75, 0.79, 0.13, 0.06, 0.04, 0.05, 0.2, 0.86, 0.2, 0.9, 0.58, 0.02, 0.53, 0.9, 0.38, 0.26, 0.97, 0.87, 0.91, 0.49, 0.88, 0.16, 0.58, 0.56, 0.98, 0.87, 0.64, 0.46, 0.4, 0.41],vec![0.58, 0.59, 0.58, 0.45, 0.65, 0.02, 0.6, 0.58, 0.62, 0.91, 0.52, 0.8, 0.99, 0.06, 0.52, 0.41, 0.22, 0.24, 0.56, 0.62, 0.08, 0.56, 0.82, 0.33, 0.73, 0.98, 0.71, 0.9, 0.35, 0.87, 0.86, 0.44, 0.96, 0.3, 0.22, 0.14, 0.91, 0.78, 0.45, 0.88],vec![0.19, 0.44, 0.51, 0.05, 0.6, 0.89, 0.89, 0.19, 0.03, 0.53, 0.21, 0.7, 0.29, 0.3, 0.16, 0.03, 0.88, 0.66, 0.68, 0.9, 0.55, 0.94, 0.73, 0.52, 0.54, 0.28, 0.33, 0.54, 0.3, 0.68, 0.64, 0.55, 0.68, 0.3, 1.0, 0.66, 0.24, 0.67, 0.6, 0.67],vec![0.75, 0.72, 0.35, 0.49, 0.66, 0.85, 0.56, 0.69, 0.58, 0.82, 0.5, 0.43, 0.02, 0.75, 0.77, 0.45, 0.99, 0.08, 0.23, 0.93, 0.89, 0.52, 0.78, 0.14, 0.99, 0.83, 0.44, 0.13, 0.15, 0.49, 0.13, 0.09, 0.78, 0.51, 0.99, 0.4, 0.75, 0.72, 0.23, 0.92],vec![0.31, 0.7, 0.52, 0.26, 0.37, 0.33, 0.1, 0.56, 0.66, 0.68, 0.03, 0.28, 0.29, 0.41, 0.02, 0.47, 0.26, 0.61, 0.74, 0.89, 0.0, 0.44, 0.81, 0.07, 0.36, 0.96, 0.14, 0.78, 0.26, 0.56, 0.69, 0.5, 0.45, 0.11, 0.08, 0.84, 0.69, 0.66, 0.78, 0.57],vec![0.17, 0.41, 0.44, 0.85, 0.28, 0.08, 0.33, 0.65, 0.72, 0.47, 0.7, 0.53, 0.96, 0.13, 0.81, 0.42, 0.21, 0.9, 0.37, 0.16, 0.28, 0.15, 0.89, 0.75, 0.95, 0.79, 0.2, 0.8, 0.5, 0.94, 0.16, 0.18, 0.82, 0.49, 0.14, 0.76, 0.61, 0.12, 0.16, 0.11],vec![0.6, 0.05, 0.09, 0.17, 0.69, 0.01, 0.51, 0.28, 0.21, 0.61, 0.55, 0.09, 0.54, 0.55, 0.57, 0.54, 0.29, 0.74, 0.25, 0.62, 0.15, 0.78, 0.47, 0.23, 0.98, 0.36, 0.28, 0.72, 0.72, 0.28, 0.21, 0.13, 0.17, 0.33, 0.4, 0.55, 0.72, 0.52, 0.54, 0.75],vec![0.15, 0.29, 0.52, 0.81, 0.86, 0.94, 0.15, 0.51, 0.52, 0.18, 0.27, 0.53, 0.95, 0.95, 0.09, 0.63, 0.9, 0.58, 0.94, 0.85, 0.42, 0.57, 0.74, 0.33, 0.27, 0.65, 0.0, 0.57, 0.28, 0.73, 0.3, 0.53, 0.01, 0.72, 0.05, 0.29, 0.54, 0.91, 0.08, 0.95],vec![0.66, 0.97, 0.39, 0.29, 0.33, 0.48, 0.01, 0.87, 0.79, 0.31, 0.46, 0.14, 0.78, 0.25, 0.85, 0.48, 0.77, 0.44, 0.15, 0.45, 0.12, 0.91, 0.23, 0.17, 0.57, 0.51, 0.06, 0.69, 0.19, 0.47, 0.62, 0.9, 0.94, 0.72, 0.5, 0.79, 0.99, 0.49, 0.32, 0.17],vec![0.87, 0.13, 0.75, 0.36, 0.62, 0.82, 0.83, 0.99, 0.89, 0.43, 0.61, 0.25, 0.05, 0.35, 0.19, 0.25, 0.18, 0.74, 0.8, 0.5, 0.84, 0.56, 0.75, 0.2, 0.75, 0.14, 0.46, 0.65, 0.21, 0.36, 0.87, 0.66, 0.26, 0.56, 0.62, 0.15, 0.05, 0.28, 0.75, 0.18],vec![0.36, 0.04, 0.0, 0.08, 0.2, 0.56, 0.84, 0.27, 0.17, 0.74, 0.92, 0.1, 0.85, 0.56, 0.16, 0.74, 0.67, 0.96, 0.29, 0.6, 0.15, 0.5, 0.26, 0.2, 0.04, 0.7, 0.94, 0.91, 0.33, 0.84, 0.18, 0.55, 0.13, 0.08, 0.06, 0.38, 0.57, 0.36, 0.74, 0.61],vec![0.68, 0.55, 0.47, 0.35, 0.61, 0.22, 0.49, 0.42, 0.47, 0.34, 0.65, 0.36, 0.64, 0.65, 0.91, 0.88, 0.72, 0.02, 0.51, 0.16, 0.4, 0.67, 0.66, 0.77, 0.08, 0.64, 0.46, 0.33, 0.79, 0.97, 0.24, 0.61, 0.12, 0.76, 0.26, 0.37, 0.48, 0.15, 0.61, 0.3],vec![0.36, 0.83, 0.38, 0.65, 0.27, 0.75, 0.33, 0.9, 0.65, 0.76, 0.1, 0.4, 0.9, 0.11, 0.9, 0.88, 0.86, 0.79, 0.41, 0.01, 0.69, 0.48, 0.44, 0.96, 0.54, 0.9, 0.83, 0.17, 0.31, 0.11, 0.2, 0.77, 1.0, 0.47, 0.68, 0.5, 0.86, 0.35, 0.24, 0.88],vec![0.18, 0.17, 0.96, 0.11, 0.94, 0.85, 0.6, 0.12, 0.98, 0.8, 0.6, 0.14, 0.01, 0.54, 0.71, 0.92, 0.69, 0.45, 0.21, 0.78, 0.08, 0.19, 0.1, 0.03, 0.43, 0.01, 0.26, 0.22, 0.58, 0.52, 0.43, 0.76, 0.84, 0.98, 0.97, 0.3, 0.65, 0.47, 0.54, 0.98],vec![0.45, 0.98, 0.5, 0.32, 0.44, 0.91, 0.49, 0.96, 0.46, 0.97, 0.93, 0.8, 0.11, 0.43, 0.5, 0.51, 0.77, 0.94, 0.9, 0.17, 0.23, 0.69, 0.14, 0.65, 0.51, 0.57, 0.66, 0.2, 0.83, 0.31, 0.26, 0.07, 0.16, 0.83, 0.78, 0.34, 0.69, 0.06, 0.55, 0.17],vec![0.42, 0.86, 0.57, 0.8, 0.91, 0.09, 0.67, 0.96, 0.46, 0.81, 0.81, 0.43, 0.71, 1.0, 0.47, 0.42, 0.11, 0.97, 0.51, 0.42, 0.57, 0.74, 0.11, 0.73, 0.31, 0.34, 0.95, 0.58, 0.88, 0.41, 0.53, 0.93, 0.19, 0.16, 0.44, 0.35, 0.02, 0.88, 0.87, 0.9],vec![0.01, 0.03, 0.6, 0.14, 0.61, 0.75, 0.29, 0.39, 0.9, 0.45, 0.18, 0.98, 0.26, 0.97, 0.3, 0.79, 0.3, 0.02, 0.02, 0.59, 0.5, 0.78, 0.68, 0.3, 0.59, 0.63, 1.0, 0.42, 0.69, 0.1, 0.86, 0.56, 0.43, 0.36, 0.98, 0.59, 0.9, 0.03, 0.15, 0.9]];
    let mut l_sparse = rsparse::data::Sprs::new();
    l_sparse.from_vec(&l);

    let mut b = vec![
        0.46,
        0.94,
        0.98,
        0.52,
        0.68,
        0.17,
        0.61,
        0.63,
        0.01,
        0.07,
        0.21,
        0.03,
        0.23,
        0.24,
        0.60,
        0.30,
        0.14,
        0.14,
        0.16,
        0.17,
        0.65,
        0.35,
        0.04,
        0.05,
        0.17,
        0.64,
        0.21,
        0.94,
        0.70,
        0.82,
        0.67,
        0.57,
        0.55,
        0.81,
        0.57,
        0.97,
        0.16,
        0.17,
        0.86,
        0.33
    ];

    let x = vec![
        -5.04,
        3.46,
        0.74,
       -2.85,
       -0.62,
       -0.41,
       11.22,
        2.47,
       -2.10,
       -0.66,
       -1.46,
       -1.42,
        0.05,
        2.24,
        2.02,
        0.60,
       -2.44,
       -3.32,
        6.12,
        0.31,
        2.22,
       -2.03,
        3.00,
       -5.70,
       -2.08,
       -0.29,
       -1.35,
        5.38,
        6.15,
       -6.76,
       -6.93,
        5.08,
        2.50,
       -0.81,
       -1.61,
        0.17,
        3.83,
        1.53,
       -6.12,
       -4.36
    ];

    rsparse::lusol(&mut l_sparse, &mut b, 1, 1e-6);

    utils::assert_eq_f_vec(&b, &x, 0.5);
}

#[test]
fn lusol_4(){
    let l = vec![vec![-0.04479224889679645, 0.2972047185507001, -0.4993421100557778, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.13171830709125532, 0.0, 0.0, 0.0, 0.0, -0.21850333450684634, 0.4853714634717172, 0.0, 0.0, -0.1943082676066874, 0.21377247982610847, 0.0, 0.0, 0.7196874719923003, -0.9363318154515239, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05508548497477039, -0.9082034478889682, 0.0, 0.0, -0.5419511258125012, 0.0, 0.43471467137300546, 0.0],vec![0.0, 0.0, 0.0, 0.0, 0.0, -0.6463240777952555, -0.12175826708377535, 0.0, 0.47526029580624973, 0.21194924795160275, 0.0, -0.17794130237300876, 0.0, 0.41236060231433735, 0.0, -0.7554921009655757, 0.0, -0.8331652336693589, 0.0, 0.05527642580301406, 0.0, 0.5229663287971695, -0.8153879543959057, 0.0, 0.0011884419012897496, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8957555439792642, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.7766733556721741, 0.0, -0.6673655289528644],vec![0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.7735184367526247, 0.0, 0.7777574078669096, -0.5606169868422328, 0.0, 0.0, 0.6643647547385383, 0.0, -0.7172325635610453, 0.0, -0.8798670558732584, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9491290665133116, 0.0, 0.0, 0.0, 0.0, 0.0, -0.26404229319918815, 0.16032026324008264, 0.0, 0.0, 0.0, 0.0, -0.9635959587071807],vec![-0.6512610742885001, 0.0, 0.09697186920543022, 0.4674981882470681, 0.0, 0.7207703043219116, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.9653020587589625, -0.45873485774914347, 0.015481592277492462, 0.0, 0.7905581458513724, -0.9633382677643372, 0.0, -0.9165523537846971, 0.0, 0.0, 0.0, 0.5416059001722979, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.8132136018939813, 0.0, 0.6503667565260169, 0.0, -0.6272610550100921, 0.0, 0.6948734232258498, 0.0, -0.18643828594778022],vec![0.0, 0.0, 0.8900480209891559, 0.2731914019206083, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8261263904289713, 0.0, 0.9004722031329604, 0.005310069560848785, 0.0, 0.0, 0.0, -0.8847425105746216, -0.9148159785409917, 0.0, 0.0, -0.26613307466849023, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.23925112486334532, 0.0, 0.0, 0.0, 0.8893588077036267, -0.5801572204777516, -0.5968566466887673, 0.0, 0.4240940170884566, 0.0, 0.0, 0.73883951738193],vec![0.0, 0.16573539898603706, 0.0, 0.0, 0.9446150927339365, 0.0, 0.0, 0.2539569882276058, 0.0, 0.22132878589572758, 0.0, 0.7938593584565312, 0.0, 0.5651823500866993, 0.0, -0.7016012301921264, 0.0, 0.0, 0.24257927850042393, 0.5728104161883694, 0.0, -0.371281701729657, 0.0, 0.0, 0.0, -0.36779474145159896, 0.0, 0.0, -0.5201296751940021, 0.0, -0.9902424478645961, -0.7751352741687636, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],vec![0.0, 0.0, 0.0, 0.0, 0.0, 0.5888311630660665, 0.0, 0.0, -0.5415078009581318, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.4958703119924728, 0.0, 0.0, 0.9536978477284299, 0.6806052156582765, 0.8958818297038091, 0.0, -0.24770451752351885, 0.0, 0.0, -0.2079666908825153, -0.44149985176659534, 0.48526629993737713, 0.0, 0.0, 0.0, 0.5205707853224986, 0.0, 0.0, 0.5251717806837917, -0.9598625325252694, 0.0, 0.64759573951251, 0.0],vec![0.0, 0.352469677663793, 0.0, 0.0, 0.0, 0.0, 0.871301063174063, 0.0, 0.0, 0.6523060315728082, 0.0, 0.0, -0.5552944317900426, 0.3563327013717872, 0.0, 0.0, 0.7918469040363043, 0.6307425428900839, 0.0, 0.0, -0.7650654030276967, 0.26621460955497556, 0.0, -0.6122764327167707, 0.0, 0.0, 0.0, 0.9667385751439883, 0.0, 0.7323694443399038, 0.0, -0.865181444423907, 0.776328312459081, 0.0, 0.359797810834652, 0.0, 0.0, 0.0, 0.0, 0.0],vec![0.0, 0.41283638398011613, -0.469805584987669, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2599696903039239, 0.0, 0.6336359227605233, 0.0, 0.0, 0.0, 0.0, 0.6492352756009623, -0.7942485884833455, -0.23428569084469197, -0.5930130474412989, 0.0, 0.0, -0.8223175363450361, 0.0, 0.0, -0.7111055614222714, 0.4723617203602135, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.237783829355396, 0.0, 0.0, -0.2575274262078766, 0.8066896942254338],vec![0.0913357477800647, 0.19417955694107336, 0.0, 0.43147741189597966, 0.0, 0.0, 0.0, 0.0, 0.7277271647662675, 0.0, 0.0, -0.5651199343800646, 0.0, 0.0, -0.06489501882111215, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2998226816306999, 0.0, 0.0, 0.0, 0.0, -0.708294841924292, -0.5841247700066023, 0.0, -0.9050095878139448, -0.971916168548512, -0.25730653663380343, 0.0, -0.03661618792487231, -0.27987243801796713, 0.0, -0.8286790816186274, 0.0, -0.266032278372871],vec![0.0, 0.8642272299604892, -0.1984481610826503, 0.0, 0.0, 0.6100217462761386, 0.0, 0.0, 0.0, -0.2852013833246285, 0.0, -0.22125191122480126, 0.0, 0.0, -0.9381451644430028, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.5671299853591578, 0.0, 0.0, -0.4909908921284194, 0.0, 0.86176808320046, 0.0, 0.0],vec![-0.6458071719288341, 0.0, 0.0, 0.0, 0.0, -0.728708733239541, -0.20373905410733695, -0.6239837073577941, 0.0, -0.2888144699554456, 0.4432849597638908, 0.0, -0.3154127509311464, 0.0, 0.0, -0.9060637856767046, -0.06673086374007609, 0.0, 0.0, 0.0, 0.17104055501534665, 0.6974278619693819, 0.0, 0.0, -0.35999971022783783, 0.0, 0.0, 0.2355661064984793, 0.0, 0.6771586888150878, 0.0, -0.4894344004126574, 0.7392126060062769, 0.0, 0.6119152145857842, 0.7035790867119014, 0.0, 0.0, -0.24014870214335038, -0.8511987029453714],vec![0.9539308592872766, 0.0, -0.9955498479793876, 0.0, 0.9323025544097576, -0.581566016578535, 0.0, -0.8488458693032166, 0.0, 0.0, 0.5804471961904603, 0.07983925416470194, 0.0, 0.7900974911743632, 0.0, 0.25705016127614533, -0.45618027916947246, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.6825242139272365, 0.0, -0.0017694123486582392, 0.0, 0.0, 0.6162069133107215, -0.5441198567550343, 0.0, 0.12000104877138273, 0.0, 0.0, 0.0, 0.0, 0.22593176234437085, 0.944520917830074, 0.0],vec![-0.15051543036571902, 0.0, 0.39018808489285095, 0.21813920532758013, 0.0, 0.0, 0.8989932797591087, -0.4058964067108666, -0.5409915835394701, 0.0, 0.0, -0.3093470701471812, -0.8495760749707921, 0.40015206195370334, 0.0, 0.2508052554113773, 0.5200114180663018, 0.526700672109595, 0.0, -0.20395958694823602, 0.0, -0.6168125720701876, 0.0, 0.0, 0.0, 0.0, 0.0, -0.30540072054089307, 0.0, 0.0, 0.04948265771838556, 0.0, 0.7481108768558813, 0.6269463083803555, 0.780562415356826, 0.0, 0.0, 0.0, 0.0, 0.0],vec![0.0, 0.0, 0.5253229612096426, 0.0, -0.9645424747835705, 0.0, 0.0, -0.32480926354717754, 0.0, 0.0, 0.0, 0.04617857465088426, 0.37174127455876094, 0.0, 0.0, 0.6271961653440661, 0.0, 0.5491042746142174, 0.0, 0.0, -0.2364231110694408, 0.0, 0.04217427086577108, 0.0, 0.0, 0.0, -0.014038680796998104, 0.0, 0.0, 0.0, 0.0, -0.3541586515826096, -0.21747049220692993, 0.0, 0.0, 0.27714516668139955, 0.0, 0.920717560121098, 0.0, 0.0],vec![0.0, 0.7068083792044746, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5839114375418941, 0.9883001675044636, 0.0, 0.0, 0.0, 0.0, 0.0, -0.7230319708324857, 0.0, 0.0, 0.0, -0.7574096911067263, -0.7041093366710494, 0.0, 0.0, 0.6167741705785219, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.18338004806035357, 0.0, 0.620135655922254, 0.4518168200551782, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],vec![0.0, 0.0, -0.1273332902792219, 0.0, 0.0, -0.2523698811227806, 0.0, -0.036083993041210016, 0.722281341890723, 0.0, 0.1497551584612853, 0.0, 0.0, 0.0, 0.0, 0.9508519461575937, 0.6840429318828487, 0.0, 0.8867587980384017, 0.0, 0.6399487874412639, 0.6315180263895204, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.22439493618915263, -0.3308808830068539, 0.0, 0.0, 0.0],vec![0.0, 0.0, 0.0, 0.0, 0.0, -0.909281205919543, 0.0, 0.0, -0.4014701471240365, 0.0, 0.0, -0.054039481853081384, 0.0, 0.8271205347491726, 0.8197796517941167, 0.472563842390638, -0.08358395374481287, -0.7988767390456228, 0.0, 0.0, 0.0, 0.0, 0.0, 0.7104000249503248, -0.4816109230131844, 0.567452881688826, 0.0, -0.5150288017136304, -0.7191055011075531, 0.1840448646787496, 0.0, 0.0, 0.0, -0.7344550480306133, 0.0, 0.0, -0.693687100933517, 0.0, 0.0, 0.5294855048884128],vec![0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8622549641181811, 0.0, 0.0, 0.4093002244387891, 0.0, 0.7393101914944502, 0.0, 0.0, 0.5103755902021314, -0.766116351022315, 0.0, -0.14087978504197585, 0.0, -0.6650302347539965, -0.6216441051443, 0.0, 0.0, 0.0, 0.0, 0.0, 0.806736895404444, 0.8773894067301191, 0.31179376240601786, -0.7309686884301267, 0.036632283388467135, 0.0, -0.8951999464209588, 0.9818326583432826, 0.576644044674471, 0.0],vec![0.0, -0.14644508150076807, 0.8662845030772217, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1908905007398669, 0.0, 0.0, 0.0, -0.2840331117295596, 0.0, 0.0, 0.0, 0.2534132449240456, -0.5090626454689806, 0.0, -0.498389212548624, 0.0, 0.0, 0.49095579116576027, 0.0, 0.0, -0.8845126582285474, -0.807507737297118, -0.9339937618606622, 0.14011343928310627, -0.9461842185824825, 0.415365269822376, 0.0, 0.0, 0.0, -0.36366939104883245, 0.0, 0.0, -0.9809465428615689, 0.0],vec![0.0, -0.10721096222485627, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.464893711879806, 0.0, 0.0, 0.0, -0.8486946969155931, -0.10453764352034733, 0.43558727973666134, 0.9018262390322893, -0.020803657518410512, 0.4375468870167125, 0.10726341049723476, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.992646532485616, 0.0, 0.0, 0.0, 0.3358063887227296, -0.29748516222287336, -0.5015454382714388, 0.0, -0.8193590529538102, 0.0, 0.6003170193860647, 0.0, 0.5989305602242054],vec![0.9655944594623886, 0.0, 0.8450371718188663, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.8734034836329403, 0.0, 0.0, 0.7485081743194466, 0.0, 0.0, 0.5896080947451423, 0.0, 0.0, 0.0, 0.05391368187387369, 0.4211455691699042, -0.5767267568944965, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3516090134933738, 0.0, 0.0, 0.0, 0.0, -0.8814396076096866, 0.4463489135549299, 0.0, 0.0, 0.3161492619286683, 0.0],vec![0.0, 0.3148561340388152, 0.0, 0.0, 0.0, 0.0, 0.3512328167273413, 0.0, 0.0, 0.0, 0.0, 0.0, 0.22749293738379217, 0.0, 0.0, 0.0, 0.0, 0.0, -0.2819657635217825, 0.0, -0.943709081409152, 0.0, 0.0, 0.0, -0.6299800871182506, 0.0, 0.700596694000206, -0.8720229080114446, -0.8375725738451147, 0.9880473229200968, 0.0, -0.38273916575220257, 0.0, 0.0, -0.42152247150203803, 0.0, -0.8219561697077724, -0.8399811760357005, 0.0, 0.0],vec![0.0, 0.16118452706302278, 0.9923262217962225, -0.4056134005321479, 0.4629476253599518, 0.0, 0.3970991946840494, 0.0, -0.24257487640067432, 0.8657928794971319, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.015099678793022875, 0.0, -0.7370493387940502, 0.0, -0.35449384034106246, 0.0, 0.0, 0.6401673230904636, 0.0, 0.0, 0.0, 0.1691180065418305, 0.47777942623865677, 0.2102908459744881, 0.0, -0.3537038854056629, 0.0, 0.0, 0.0, 0.0, 0.0, -0.2509209755109043, 0.0],vec![0.31902197755381567, 0.0, 0.0, 0.0, 0.38359809413060675, 0.0, -0.053392471355655946, 0.0, 0.0, 0.0, 0.24053903889199013, -0.49804078860297674, 0.44339989979836614, -0.8845878726952945, 0.0, 0.141098500247689, 0.0, -0.19837194444516815, 0.1841771520746256, -0.5745764238752449, 0.0, 0.0, 0.0, 0.0, 0.0, 0.24930143283533956, -0.5330598022394211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.8252202821873678, 0.6697834150504482, 0.0, 0.0, 0.0, -0.334314143719886, 0.22743736318555197],vec![0.9605450212583309, 0.0, 0.0, 0.0, 0.0, -0.7357810033217809, 0.0, 0.0, 0.0, 0.0, 0.0, 0.12272709019120365, 0.0, 0.5573049409237281, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2357667032205022, 0.0, -0.5743943422566804, -0.09148799679267405, 0.686511923693883, -0.6771999495177949, 0.0, 0.24352618349951216, 0.0, 0.0, 0.0, -0.28240922910569344, 0.0, 0.0, 0.0, 0.0, 0.8587867199181782, -0.8270878563157369],vec![0.0, 0.0, 0.0, 0.0, 0.6236826080573694, -0.5409208389318592, 0.0, 0.0, 0.0, 0.0, 0.3092925967672724, 0.0, -0.24386417209057787, -0.2782889252020586, 0.0, 0.0, 0.0, 0.0, 0.0, -0.8161492140539686, 0.47247879497076095, 0.0, 0.6873976185678201, 0.8180566997169958, 0.0, 0.0, 0.0, 0.9350302315238128, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9531462126116839, -0.6495309894647514, 0.0],vec![0.0, -0.6126020223018258, 0.0, 0.0, 0.4495531668492583, 0.0, 0.0, 0.8688325676035538, -0.2305522001940139, 0.0, 0.0, 0.0, -0.8475248848324282, 0.0, 0.1832682296314041, 0.5185201873470828, 0.0, 0.0, 0.3790635341761244, -0.20167772798909045, -0.780973722928193, 0.7029774155968522, 0.2762765769440485, 0.7628735512189757, 0.0, -0.02379598703684649, 0.0, 0.0, -0.5719889067703927, 0.9859783963485718, 0.0, 0.0, 0.0, -0.028721398963797995, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],vec![0.9820650193737133, 0.0, 0.0, 0.0, 0.956251923796613, 0.9689477780474534, 0.534587328845344, 0.0, 0.9553575394981262, 0.0, 0.6803019121981808, 0.0, 0.0, 0.0, 0.014999014414478262, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.41134092619381923, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5020990578145033, 0.0, 0.0, -0.9360434135179614, 0.0, 0.0, 0.46695131688962, -0.25256372217820466, 0.8215812320249856, 0.0],vec![0.0, 0.3078505651776573, 0.0, 0.06309879342696778, 0.0, 0.0, 0.0, 0.0, -0.7911305795679777, 0.0, 0.0, -0.9761494667469497, 0.0, 0.0, 0.0, 0.0, 0.0, -0.14296081542516892, 0.0, 0.0, 0.0, -0.7932410929582356, -0.4331711836246446, 0.9588832692913547, 0.8591640306149859, 0.3635949376977232, -0.47328014287076425, 0.8958388558854509, 0.0, 0.0, -0.2983308250474608, 0.0, 0.0, -0.19584488116260856, 0.0, 0.0, 0.0, 0.4943463777713524, 0.46356046049084343, -0.6460862663005809],vec![-0.18768705588672074, 0.0, 0.0, -0.2512370440423657, 0.0, 0.0, 0.0, -0.5133858344501212, -0.8177407079955201, 0.0, 0.0, 0.31104096031140904, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3160044375481337, -0.4736810044545623, 0.995826379343602, 0.0, -0.233224401264283, -0.0011326696905038514, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5244668642811199, 0.0, 0.36909485965984423, 0.0, 0.0, 0.0, 0.0, 0.0],vec![0.47806224280129017, -0.10270330734707822, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8959132179222431, -0.581564974335925, 0.0, 0.0, 0.0, 0.0, -0.20013931512497996, 0.0, 0.0, 0.0, 0.16704607943394767, 0.0, 0.0, 0.0, 0.0, 0.17610639763981584, 0.0, 0.0, 0.9737227582304981, 0.0, 0.6609808883086052, -0.673803644126207, 0.0, 0.0, 0.0, -0.5859661050132974, 0.0, -0.9936878522185693, 0.8744582149217344, -0.9837245665505445, 0.0, 0.0],vec![0.0, 0.0, 0.0, 0.0, 0.0, -0.7399884622384456, 0.5618945341081809, 0.0, 0.7521324672907792, 0.0, -0.7764367154848686, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.6205380664961337, 0.3179387199387558, 0.0, 0.0, 0.0, 0.5846246652283522, 0.0, 0.0, 0.0, 0.7448379131487592, 0.020180724676208683, -0.7669303752376078, -0.7350887729799949, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0772485024196794, 0.0027521731531672255, 0.0, 0.24433674464365773],vec![0.0, 0.0, 0.6716429195615166, 0.0, 0.0, 0.6747635652529471, 0.0, 0.0, 0.0, 0.0, -0.16870572334043454, -0.16407957721293798, 0.0, 0.0, 0.0, -0.3856567455176103, 0.0, 0.12082353870203288, 0.0, 0.0, 0.30750679408597015, 0.0, 0.0, 0.40952073527384214, -0.8753501489725222, -0.7721530570105131, 0.0, 0.0, 0.0, 0.0, 0.8888516870257164, -0.22394299292890874, 0.0, 0.7945732216033734, 0.0, 0.0, -0.06072561567033663, 0.1301967945712228, 0.0, 0.0],vec![0.0, -0.2726538627811128, 0.0, 0.0, 0.0, 0.0, 0.20292859997123713, 0.0, 0.12061151119888258, 0.0, 0.0, 0.2766324444557682, -0.35578598147475815, 0.6783741464083357, 0.0, 0.0, 0.6686247297035965, -0.49072611320469095, 0.0, 0.0, 0.0, -0.5089176499845802, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.9383766245388532, -0.5294369467796369, 0.0, 0.0, -0.15835843435866503],vec![0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.024228036785728824, -0.132825359759432, 0.0, 0.0, -0.47836585494583117, 0.15858213365831086, 0.0, 0.902721647046316, -0.9590207450211776, 0.0, -0.9398937677989441, 0.0, 0.0, 0.0, 0.0, -0.18091985034137958, 0.0, 0.0, 0.0, -0.6553135145482241, 0.0, 0.38705667394073573, 0.0, 0.0, -0.25509261165909014, 0.0, 0.0, 0.20905981689597586, 0.0, 0.39316904784038753, -0.7858770620929203, 0.0, 0.0, 0.0],vec![0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.8002943584302662, -0.18895232411042961, 0.0, 0.0, 0.0, 0.0, 0.0, -0.48420613373634214, -0.8713446746128943, -0.6832862844563787, 0.7277673510910114, 0.4336608030237352, 0.0, -0.6507667450287824, 0.0, 0.0, 0.0, 0.0, -0.3849782050483541, -0.5142942272859927, 0.0, 0.0, 0.3585564740237106, 0.0, 0.30590459395887426, 0.0, 0.0, 0.0, -0.10502200993459243, -0.30880225886990176, 0.9392654358775443, 0.8365393732896655, 0.0, 0.0],vec![0.0, 0.12742304338708954, 0.0, -0.7084451513547307, 0.0, -0.04052171138085181, 0.0, 0.0, 0.0, 0.0, -0.2208142621287814, -0.34749423268322466, -0.6203358054114232, 0.0, 0.0, -0.7135562172004488, -0.5117071352754003, 0.0, 0.0, 0.0, 0.0, -0.6479952378162346, 0.0, 0.0, -0.3560380960573055, 0.0, -0.9983856843937755, 0.0, 0.0, 0.0, 0.1802394181561653, -0.09277893988872021, -0.6407627958393443, 0.0, 0.0, 0.7892446051517628, 0.005514102216462424, 0.0, -0.7253742622126091, 0.0],vec![0.0, 0.0, -0.041627753068085305, 0.0, 0.0, 0.0, 0.0, -0.45292729134233567, 0.0, 0.0, 0.0, 0.0, 0.0, -0.8093228095320528, 0.23599536532673326, 0.0, 0.0, -0.46245046509574905, 0.0, 0.0, 0.6654672875854157, 0.44167772497313496, -0.9568471415277544, 0.0, 0.0, 0.0, 0.0, 0.13846695764016625, 0.2528777453028035, 0.24857105909108124, 0.9252753062834864, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.7983529563888361, 0.16288551864800294, 0.0],vec![0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.07697793035969935, 0.0, 0.0, 0.0, -0.817399764741924, 0.0, 0.09928374629772252, 0.0, 0.0, -0.1793129437697012, 0.5734758856262518, 0.0, 0.0, -0.1622459188121863, 0.0, 0.0, 0.4950626846490034, 0.8006725624890878, 0.7239779154848263, 0.4357821742014216, 0.4749734294613275, 0.0, 0.0, 0.0, -0.1269022693449262, 0.0, 0.0, 0.0, 0.0, 0.0, 0.06597388215650435, 0.0, 0.2638337356473517, 0.0]];
    let mut l_sparse = rsparse::data::Sprs::new();
    l_sparse.from_vec(&l);

    let mut b = vec![
        0.46,
        0.94,
        0.98,
        0.52,
        0.,
        0.,
        0.,
        0.63,
        0.01,
        0.07,
        0.21,
        0.03,
        0.23,
        0.24,
        0.60,
        0.30,
        0.14,
        0.14,
        0.16,
        0.,
        0.65,
        0.35,
        0.,
        0.05,
        0.17,
        0.64,
        0.21,
        0.,
        0.70,
        0.82,
        0.67,
        0.,
        0.55,
        0.81,
        0.57,
        0.97,
        0.16,
        0.17,
        0.86,
        0.33
    ];

    let x = vec![
         1.042286946074813e+00,
        -2.013304328426485e-01,
         2.483587360685154e-01,
        -2.182870933506023e-01,
        -3.303132968287099e-01,
        -5.493896627278909e-02,
        -2.651250150682610e-01,
        -2.622774432945461e-01,
         3.475702706948072e-01,
         1.310884714167888e-01,
        -2.408919696770444e-01,
         1.695592510787395e-01,
        -3.769733368988659e-01,
        -1.100200019853656e-01,
        -4.258516479478193e-01,
        -2.019434331548752e-01,
        -1.155920092105528e-01,
         2.937534977470584e-01,
        -5.280503536008022e-02,
        -7.289207776660919e-02,
         1.431333387880976e-01,
        -3.173099622241497e-02,
        -6.001808347075702e-01,
         4.229459656750006e-01,
         2.528391745532582e-01,
         1.340040252612305e-01,
        -7.795935990918691e-02,
         3.483924404711563e-01,
        -6.742737563768186e-01,
        -2.062437996236684e-01,
         5.281957696081389e-01,
        -5.589619374496905e-01,
         1.996714769108318e-01,
         4.899670146215097e-03,
         3.755421722736400e-01,
        -2.569172022779062e-01,
        -7.172726642338468e-01,
         1.500200300947981e-01,
         2.941294316736809e-01,
        -3.189117248155740e-02
    ];

    rsparse::lusol(&mut l_sparse, &mut b, 1, 1e-6);

    utils::assert_eq_f_vec(&b, &x, 1e-5);
}

#[test]
fn lusol_5(){
    let u =vec![    
        vec![0.7824, 0.4055, 0.0827, 0.9534, 0.9713, 0.1418, 0.0781],
        vec![0.0, 0.7766, 0.2981, 0.2307, -0.3172, 0.6819, 0.5979],
        vec![0.0, 0.0, 0.2986, -0.5576, 0.5928, -0.2759, -0.1672],
        vec![0.0, 0.0, 0.0, 0.6393, -0.4245, 0.1277, 0.5842],
        vec![0.0, 0.0, 0.0, 0.0, -1.277, 1.1435, 1.0631],
        vec![0.0, 0.0, 0.0, 0.0, 0.0, 1.2096, 0.7268],
        vec![0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.4574]
    ];
    let mut u_sparse = rsparse::data::Sprs::new();
    u_sparse.from_vec(&u);

    let mut b = vec![
        0.189772,
        0.055761,
        0.030676,
        0.181620,
        0.526924,
        0.744179,
        0.078005
    ];

    let x = vec![ // u\b
        -0.047146,
        -0.941265,
         1.158658,
         0.355142,
         0.088052,
         0.717684,
        -0.170555
    ];

    rsparse::lusol(&mut u_sparse, &mut b, 1, 1e-6);

    utils::assert_eq_f_vec(&b, &x, 1e-3);
}